#include <stdio.h>
#include <limits.h>

#define V 4

int tsp(int graph[][V], int s)
{
    int all_visited = (1 << V) - 1;
    int dp[V][1 << V];
    
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < (1 << V); j++) {
            dp[i][j] = -1;
        }
    }
    
    dp[s][1 << s] = 0;
    
    for (int mask = 1; mask < (1 << V); mask++) {
        if (!(mask & (1 << s))) {
            continue;
        }
        
        for (int i = 0; i < V; i++) {
            if (i == s || !(mask & (1 << i))) {
                continue;
            }
            
            dp[i][mask] = INT_MAX;
            
            for (int j = 0; j < V; j++) {
                if (j == i || j == s || !(mask & (1 << j)) || graph[j][i] == 0) {
                    continue;
                }
                
                int cost = dp[j][mask ^ (1 << i)] + graph[j][i];
                if (cost < dp[i][mask]) {
                    dp[i][mask] = cost;
                }
            }
        }
    }
    
    int res = INT_MAX;
    for (int i = 0; i < V; i++) {
        if (i != s && graph[i][s] != 0) {
            int cost = dp[i][all_visited] + graph[i][s];
            if (cost < res) {
                res = cost;
            }
        }
    }
    
    return res;
}

int main()
{
    int graph[V][V] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    
    int start = 0;
    printf("The minimum cost of the Travelling Salesman Problem is: %d\n", tsp(graph, start));
    
    return 0;
}
